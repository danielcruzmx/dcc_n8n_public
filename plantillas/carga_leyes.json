{
  "name": "carga_leyes",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Cargar archivo",
        "formDescription": "Selección de documento",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Document",
              "fieldType": "file",
              "multipleFiles": false,
              "acceptFileTypes": ".pdf",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -32,
        -112
      ],
      "id": "93bb1653-8685-42ec-831d-78531f8bd663",
      "name": "On form submission",
      "webhookId": "4f3a2288-d1d8-41c5-a303-e3b23ee5a632"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "Document",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        144,
        -112
      ],
      "id": "6957efee-ff62-41e2-8e70-e4c256833dd6",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "text": "={{ $('Extract from File').item.json.text }}",
        "attributes": {
          "attributes": [
            {
              "name": "resumen_documento",
              "description": "Resumen del documento en pocas lineas"
            },
            {
              "name": "descripcion_documento",
              "description": "Describe brevemente el documento"
            },
            {
              "name": "analisis_documento",
              "description": "Extrae una lista breve de observaciones analíticas clave"
            },
            {
              "name": "conclusion_documento",
              "description": "Resume brevemente las conclusiones"
            },
            {
              "name": "keywords_documento",
              "description": "Genera una lista de 20 palabras clave que capten la esencia del documento"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        368,
        -112
      ],
      "id": "f37589c3-817c-424e-b967-c219ed944dfe",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        432,
        48
      ],
      "id": "228e66c5-5f9d-432d-aed8-a8fbe621f11d",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "z5kFfajRtirnOQ4F",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 1) Obtiene todo el texto\nconst fullText = $('Extract from File').item.json.text || '';\n\n\n// 2) Encuentra todos los encabezados de capítulo, sección y artículo\nconst headingRegex = /^((?:T[IÍ]TULO|CAP[IÍ]TULO|ART[IÍ]CULO)\\s+[\\wÀ-ÿ]+[\\.\\-]+)/gim;\nconst matches = [];\nlet m;\nwhile ((m = headingRegex.exec(fullText)) !== null) {\n  matches.push({\n    index: m.index,\n    header: m[1].trim()    // guarda el encabezado completo\n  });\n}\n// añade marcador final para trocear hasta el final\nmatches.push({ index: fullText.length, header: null });\n\n// 3) Recorre los matches para acumular contexto y extraer cada artículo\nconst results = [];\nlet currentChapter = null;\nlet currentSection = null;\n\nfor (let i = 0; i < matches.length - 1; i++) {\n  const { index, header } = matches[i];\n  const nextIndex = matches[i + 1].index;\n  \n  // Parseamos el encabezado en dos partes: tipo y resto\n  const piece = header.match(/^(T[IÍ]TULO|CAP[IÍ]TULO|ART[IÍ]CULO)\\s+(.+)$/i);\n  if (!piece) continue;\n  const [, typeRaw, numRaw] = piece;\n  const type = typeRaw.toUpperCase();\n\n  if (type === 'TÍTULO' || type === 'TITULO') {\n    currentSection = header;\n    continue;\n  }\n  \n  if (type === 'CAPÍTULO' || type === 'CAPITULO') {\n    // guardamos el encabezado completo\n    currentChapter = header;\n    continue;\n  }\n  \n  if (type === 'ARTÍCULO' || type === 'ARTICULO') {\n    // extrae el contenido desde este encabezado hasta el siguiente\n    const content = fullText.slice(index, nextIndex).trim();\n    // usamos el encabezado completo para article\n    const articleHeader = header;\n    results.push({\n      json: {\n        title:   currentSection,    // e.g. \"TITULOS\"\n        chapter: currentChapter,    // e.g. \"CAPÍTULO IV.\"\n        article: articleHeader,     // e.g. \"ARTÍCULO 10.\"\n        content\n      }\n    });\n  }\n}\n\n// 4) Devuelve el array de artículos\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        384,
        208
      ],
      "id": "175e287a-c169-464a-ae12-a3e32b8cfa99",
      "name": "Code"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        752,
        -80
      ],
      "id": "e210c1dd-67c1-4d0c-871c-be75f9b0534d",
      "name": "Merge",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        960,
        -32
      ],
      "id": "b09d952d-cc9c-4185-84c3-b2f5fa41a900",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "=ley_condominal",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        1136,
        128
      ],
      "id": "00ff101c-23b1-4cae-8564-53bfef977a50",
      "name": "Qdrant Vector Store",
      "credentials": {
        "qdrantApi": {
          "id": "09MpbPZvbb3vtdKe",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        992,
        352
      ],
      "id": "747eb330-2d46-4cdb-9e9b-11165360e2f9",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "z5kFfajRtirnOQ4F",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.content }}",
        "textSplittingMode": "custom",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "tipo",
                "value": "=ley_condominal"
              },
              {
                "name": "resumen",
                "value": "={{ $('Information Extractor').item.json.output.resumen_documento }}"
              },
              {
                "name": "descripcion",
                "value": "={{ $('Information Extractor').item.json.output.descripcion_documento }}"
              },
              {
                "name": "analisis",
                "value": "={{ $('Information Extractor').item.json.output.analisis_documento }}"
              },
              {
                "name": "conclusiones",
                "value": "={{ $('Information Extractor').item.json.output.conclusion_documento }}"
              },
              {
                "name": "=keywords",
                "value": "={{ $('Information Extractor').item.json.output.keywords_documento }}"
              },
              {
                "name": "capitulo",
                "value": "={{ $json.chapter ?? '' }}"
              },
              {
                "name": "seccion",
                "value": "={{ $json.section ?? '' }}"
              },
              {
                "name": "articulo",
                "value": "={{ $json.article ?? '' }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        1152,
        384
      ],
      "id": "ac581422-0f58-4f7c-bbe3-dd01e11ed574",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 4000,
        "chunkOverlap": 200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1088,
        560
      ],
      "id": "94e0cede-222c-49ac-8ac1-0e376912f25e",
      "name": "Recursive Character Text Splitter"
    }
  ],
  "pinData": {},
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0a3f73cd-e647-4c79-b4f0-d160f4c95048",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ee12959d439f9263224a6ea6816a41bfdef83ed3d1d86cb7d7ef4a897c1afb24"
  },
  "id": "rZcAiRgbZoDY2GzQ",
  "tags": []
}